{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-trend/helpers/math.helpers.ts","ng://ngx-trend/helpers/misc.helpers.ts","ng://ngx-trend/trend/trend.component.ts","ng://ngx-trend/trend/trend.helpers.ts","ng://ngx-trend/helpers/DOM.helpers.ts","ng://ngx-trend/trend/trend.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","normalize","min","max","scaleMin","scaleMax","moveTo","to","from","radius","Math","sqrt","x","y","unitVector","getDistanceBetween","p1","p2","pow","checkForCollinearPoints","p3","generateId","round","random","TrendComponent","this","autoDraw","autoDrawDuration","autoDrawEasing","padding","stroke","strokeLinecap","strokeWidth","gradient","svgHeight","svgWidth","animationState","id","gradientId","prototype","ngOnChanges","_this","data","plainValues","map","point","viewBoxWidth","width","viewBoxHeight","height","viewBox","root","location","href","split","hash","pathStroke","undefined","gradientTrimmed","slice","reverse","val","idx","stopColor","offset","minX","maxX","minY","maxY","boundariesX","boundariesY","normalizedData","normalizedValues","apply","index","setTimeout","lineLength","pathEl","nativeElement","getTotalLength","smooth","_a","firstPoint","otherPoints","reduce","path","prev","isCollinear","distanceFromPrev","distanceFromNext","threshold","radiusForPoint","before","after","join","buildSmoothPath","buildLinearPath","tslib_1.__decorate","Input","ViewChild","static","Component","selector","template","animations","trigger","state","style","display","transition","animate","keyframes","stroke-dasharray","stroke-dashoffset","TrendModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* eslint-disable no-restricted-properties */\n\n/** normalize\n * This lets us translate a value from one scale to another.\n *\n * @param value - Our initial value to translate\n * @param min - the current minimum value possible\n * @param max - the current maximum value possible\n * @param scaleMin - the min value of the scale we're translating to\n * @param scaleMax - the max value of the scale we're translating to\n * @returns the value on its new scale\n */\nexport function normalize(\n  value: number,\n  min: number,\n  max: number,\n  scaleMin = 0,\n  scaleMax = 1,\n) {\n  // If the `min` and `max` are the same value, it means our dataset is flat.\n  // For now, let's assume that flat data should be aligned to the bottom.\n  if (min === max) {\n    return scaleMin;\n  }\n\n  return scaleMin + (value - min) * (scaleMax - scaleMin) / (max - min);\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/** moveTo\n * the coordinate that lies at a midpoint between 2 lines, based on the radius\n *\n * @param to - Our initial point\n * @param to.x - The x value of our initial point\n * @param to.y - The y value of our initial point\n * @param from - Our final point\n * @param from.x - The x value of our final point\n * @param from.y - The y value of our final point\n * @param radius - The distance away from the final point\n * @returns an object holding the x/y coordinates of the midpoint.\n */\nexport function moveTo(to: Point, from: Point, radius: number): Point {\n  const length = Math.sqrt((to.x - from.x) * (to.x - from.x) + (to.y - from.y) * (to.y - from.y));\n  const unitVector = { x: (to.x - from.x) / length, y: (to.y - from.y) / length };\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  };\n}\n\n/** getDistanceBetween\n * Simple formula derived from pythagoras to calculate the distance between\n * 2 points on a plane.\n *\n * @param p1 - Our initial point\n * @param p1.x - The x value of our initial point\n * @param p1.y - The y value of our initial point\n * @param p2 - Our final point\n * @param p2.x - The x value of our final point\n * @param p2.y - The y value of our final point\n * @returns the distance between the points.\n */\nexport const getDistanceBetween = (p1: Point, p2: Point) =>\n  Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n\n/** checkForCollinearPoints\n * Figure out if the midpoint fits perfectly on a line between the two others.\n *\n * @param p1 - Our initial point\n * @param p1.x - The x value of our initial point\n * @param p1.y - The y value of our initial point\n * @param p2 - Our mid-point\n * @param p2.x - The x value of our mid-point\n * @param p2.y - The y value of our mid-point\n * @param p3 - Our final point\n * @param p3.x - The x value of our final point\n * @param p3.y - The y value of our final point\n * @returns whether or not p2 sits on the line between p1 and p3.\n */\nexport const checkForCollinearPoints = (p1: Point, p2: Point, p3: Point) =>\n  (p1.y - p2.y) * (p1.x - p3.x) === (p1.y - p3.y) * (p1.x - p2.x);\n","export const generateId = () => Math.round(Math.random() * Math.pow(10, 16));\n","import {\n  animate,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  ViewChild,\n} from '@angular/core';\n\nimport { buildLinearPath, buildSmoothPath } from '../helpers/DOM.helpers';\nimport { normalize } from '../helpers/math.helpers';\nimport { generateId } from '../helpers/misc.helpers';\nimport { normalizeDataset } from './trend.helpers';\n\n\n@Component({\n  selector: 'ngx-trend',\n  template: `\n  <svg *ngIf=\"data && data.length >= 2\"\n    [attr.width]=\"svgWidth\"\n    [attr.height]=\"svgHeight\"\n    [attr.stroke]=\"stroke\"\n    [attr.stroke-width]=\"strokeWidth\"\n    [attr.stroke-linecap]=\"strokeLinecap\"\n    [attr.viewBox]=\"viewBox\"\n    [attr.preserveAspectRatio]=\"preserveAspectRatio\"\n  >\n    <defs *ngIf=\"gradient && gradient.length\">\n      <linearGradient [attr.id]=\"gradientId\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n        <stop\n          *ngFor=\"let g of gradientTrimmed;\"\n          [attr.key]=\"g.idx\"\n          [attr.offset]=\"g.offset\"\n          [attr.stop-color]=\"g.stopColor\"\n        />\n      </linearGradient>\n    </defs>\n    <path fill=\"none\" #pathEl\n      [attr.stroke]=\"pathStroke\" [attr.d]=\"d\"\n      [@pathAnimaiton]=\"{\n        value: animationState,\n        params: {\n          autoDrawDuration: autoDrawDuration,\n          autoDrawEasing: autoDrawEasing,\n          lineLength: lineLength\n        }\n      }\" />\n  </svg>\n  `,\n  animations: [\n    trigger('pathAnimaiton', [\n      state('inactive', style({ display: 'none' })),\n      transition('* => active', [\n        style({ display: 'initial' }),\n        // We do the animation using the dash array/offset trick\n        // https://css-tricks.com/svg-line-animation-works/\n        animate('{{ autoDrawDuration }}ms {{ autoDrawEasing }}',\n          keyframes([\n            style({\n              'stroke-dasharray': '{{ lineLength }}px',\n              'stroke-dashoffset': '{{ lineLength }}px',\n            }),\n            style({\n              'stroke-dasharray': '{{ lineLength }}px',\n              'stroke-dashoffset': 0,\n            }),\n          ]),\n        ),\n        // One unfortunate side-effect of the auto-draw is that the line is\n        // actually 1 big dash, the same length as the line itself. If the\n        // line length changes (eg. radius change, new data), that dash won't\n        // be the same length anymore. We can fix that by removing those\n        // properties once the auto-draw is completed.\n        style({\n          'stroke-dashoffset': '',\n          'stroke-dasharray': '',\n        }),\n      ]),\n    ]),\n  ],\n})\nexport class TrendComponent implements OnChanges {\n  id: number;\n  @Input() data: (number | {value: number})[];\n  @Input() smooth: boolean;\n  @Input() autoDraw = false;\n  @Input() autoDrawDuration = 2000;\n  @Input() autoDrawEasing = 'ease';\n  @Input() width: number;\n  @Input() height: number;\n  @Input() padding = 8;\n  @Input() radius = 10;\n  @Input() stroke = 'black';\n  @Input() strokeLinecap = '';\n  @Input() strokeWidth = 1;\n  @Input() gradient: string[] = [];\n  @Input() preserveAspectRatio: string;\n  @Input() svgHeight: string | number = '25%';\n  @Input() svgWidth: string | number = '100%';\n  @ViewChild('pathEl', { static: false }) pathEl: ElementRef;\n  gradientTrimmed: any[];\n  d: any;\n  viewBox: string;\n  pathStroke: any;\n  gradientId: string;\n  lineLength: number;\n  animationState = '';\n\n  constructor() {\n    this.id = generateId();\n    this.gradientId = `ngx-trend-vertical-gradient-${this.id}`;\n  }\n  ngOnChanges() {\n    // We need at least 2 points to draw a graph.\n    if (!this.data || this.data.length < 2) {\n      return;\n    }\n\n    // `data` can either be an array of numbers:\n    // [1, 2, 3]\n    // or, an array of objects containing a value:\n    // [{ value: 1 }, { value: 2 }, { value: 3 }]\n    //\n    // For now, we're just going to convert the second form to the first.\n    // Later on, if/when we support tooltips, we may adjust.\n    const plainValues = this.data.map((point) => {\n      if (typeof point === 'number') {\n        return point;\n      }\n      return point.value;\n    });\n\n    // Our viewbox needs to be in absolute units, so we'll default to 300x75\n    // Our SVG can be a %, though; this is what makes it scalable.\n    // By defaulting to percentages, the SVG will grow to fill its parent\n    // container, preserving a 1/4 aspect ratio.\n    const viewBoxWidth = this.width || 300;\n    const viewBoxHeight = this.height || 75;\n    this.svgWidth = this.width || '100%';\n    this.svgHeight = this.height || '25%';\n    this.viewBox = `0 0 ${viewBoxWidth} ${viewBoxHeight}`;\n    const root = location.href.split(location.hash || '#')[0];\n    this.pathStroke = (this.gradient && this.gradient.length) ? `url('${root}#${this.gradientId}')` : undefined;\n\n    this.gradientTrimmed = this.gradient.slice().reverse().map((val, idx) => {\n      return {\n        idx,\n        stopColor: val,\n        offset: normalize(idx, 0, this.gradient.length - 1 || 1),\n      };\n    });\n\n    const normalizedValues = normalizeDataset(plainValues,\n      this.padding,\n      viewBoxWidth - this.padding,\n      // NOTE: Because SVGs are indexed from the top left, but most data is\n      // indexed from the bottom left, we're inverting the Y min/max.\n      viewBoxHeight - this.padding,\n      this.padding,\n    );\n\n    if (this.autoDraw && this.animationState !== 'active') {\n      this.animationState = 'inactive';\n      setTimeout(() => {\n        this.lineLength = this.pathEl.nativeElement.getTotalLength();\n        this.animationState = 'active';\n      });\n    }\n\n    this.d = this.smooth\n      ? buildSmoothPath(normalizedValues, this.radius)\n      : buildLinearPath(normalizedValues);\n  }\n}\n","import { normalize } from '../helpers/math.helpers';\n\nexport function normalizeDataset(\n  data: number[],\n  minX: number,\n  maxX: number,\n  minY: number,\n  maxY: number,\n) {\n  // For the X axis, we want to normalize it based on its index in the array.\n  // For the Y axis, we want to normalize it based on the element's value.\n  //\n  // X axis is easy: just evenly-space each item in the array.\n  // For the Y axis, we first need to find the min and max of our array,\n  // and then normalize those values between 0 and 1.\n  const boundariesX = { min: 0, max: data.length - 1 };\n  const boundariesY = { min: Math.min(...data), max: Math.max(...data) };\n\n  const normalizedData = data.map((point, index) => ({\n    x: normalize(index, boundariesX.min, boundariesX.max, minX, maxX),\n    y: normalize(point, boundariesY.min, boundariesY.max, minY, maxY),\n  }));\n\n  // According to the SVG spec, paths with a height/width of `0` can't have\n  // linear gradients applied. This means that our lines are invisible when\n  // the dataset is flat (eg. [0, 0, 0, 0]).\n  //\n  // The hacky solution is to apply a very slight offset to the first point of\n  // the dataset. As ugly as it is, it's the best solution we can find (there\n  // are ways within the SVG spec of changing it, but not without causing\n  // breaking changes).\n  if (boundariesY.min === boundariesY.max) {\n    normalizedData[0].y += 0.0001;\n  }\n\n  return normalizedData;\n}\n","import {\n  checkForCollinearPoints,\n  getDistanceBetween,\n  moveTo,\n  Point,\n} from './math.helpers';\n\nexport const buildLinearPath = (data: Point[]) =>\n  data.reduce((path, point, index) => {\n    // The very first instruction needs to be a \"move\".\n    // The rest will be a \"line\".\n    const isFirstInstruction = index === 0;\n    const instruction = isFirstInstruction ? 'M' : 'L';\n\n    return `${path}${instruction} ${point.x},${point.y}\\n`;\n  }, '');\n\nexport function buildSmoothPath(data: Point[], radius: number) {\n  const [firstPoint, ...otherPoints] = data;\n\n  return otherPoints.reduce((path, point, index) => {\n    const next = otherPoints[index + 1];\n    const prev = otherPoints[index - 1] || firstPoint;\n\n    const isCollinear = next && checkForCollinearPoints(prev, point, next);\n\n    if (!next || isCollinear) {\n      // The very last line in the sequence can just be a regular line.\n      return `${path}\\nL ${point.x},${point.y}`;\n    }\n\n    const distanceFromPrev = getDistanceBetween(prev, point);\n    const distanceFromNext = getDistanceBetween(next, point);\n    const threshold = Math.min(distanceFromPrev, distanceFromNext);\n\n    const isTooCloseForRadius = threshold / 2 < radius;\n\n    const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n\n    const before = moveTo(prev, point, radiusForPoint);\n    const after = moveTo(next, point, radiusForPoint);\n\n    return [\n      path,\n      `L ${before.x},${before.y}`,\n      `S ${point.x},${point.y} ${after.x},${after.y}`,\n    ].join('\\n');\n  }, `M ${firstPoint.x},${firstPoint.y}`);\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TrendComponent } from './trend.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [TrendComponent],\n  declarations: [TrendComponent],\n})\nexport class TrendModule {\n}\n"]}